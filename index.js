const express = require('express');
const cors = require('cors');
const path = require('path');
const config = require('./config/config');

const connectDB = require('./config/db');
const authRoutes = require('./routes/authRoutes');
const userRoutes = require('./routes/userRoutes');
const uploadRoutes = require('./routes/uploadRoutes');

const app = express();

// Middleware
app.use(cors());
app.use(express.json());

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

// Connect to MongoDB
connectDB()
  .then(() => console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞'))
  .catch((err) => console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err));

// Routes
app.use('/api/auth', authRoutes);
app.use('/api/users', userRoutes);
app.use('/api/upload', uploadRoutes);

// Basic route
app.get('/', (req, res) => {
  res.json({ message: 'Welcome to Sanygram API' });
});

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const fs = require('fs');
const uploadDir = path.join(__dirname, config.upload.avatarPath);
if (!fs.existsSync(uploadDir)) {
  fs.mkdirSync(uploadDir, { recursive: true });
}

// Start server
app.listen(config.port, () => {
  console.log('\nüöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
  console.log(`üîπ –ü–æ—Ä—Ç: ${config.port}`);
  console.log(`üîπ –†–µ–∂–∏–º: ${config.nodeEnv}\n`);

  console.log('üì° –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
  console.log(`üîπ POST http://localhost:${config.port}/api/auth/register/start - –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏`);
  console.log(`üîπ POST http://localhost:${config.port}/api/auth/register/complete - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏`);
  console.log(`üîπ POST http://localhost:${config.port}/api/auth/login - –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É`);
  console.log(`üîπ POST http://localhost:${config.port}/api/auth/refresh - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞`);
  console.log(`üîπ POST http://localhost:${config.port}/api/auth/logout - –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã\n`);
  
  console.log('üì° –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø—Ä–æ—Ñ–∏–ª—è:');
  console.log(`üîπ GET  http://localhost:${config.port}/api/users/profile - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å`);
  console.log(`üîπ PUT  http://localhost:${config.port}/api/users/profile - –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å`);
  console.log(`üîπ PUT  http://localhost:${config.port}/api/users/password - –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å`);
  console.log(`üîπ PUT  http://localhost:${config.port}/api/users/status - –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å`);
  console.log(`üîπ POST http://localhost:${config.port}/api/upload/avatar - –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä\n`);

  console.log('üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
  console.log('1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:');
  console.log('   a) –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ /register/start');
  console.log('   b) –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
  console.log('   c) –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥, –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –Ω–∞ /register/complete');
  console.log('2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization: Bearer <token>\n');
}); 